@inherits BaseComponent

@using TimeTracker.Api.Shared.Dto.Entity
@using TimeTracker.Business.Common.Constants

<div class="row d-flex px-3 justify-content-center w-time-form mt-3">

    <RadzenButton
        Icon="add_circle_outline"
        class="mb-3"
        Text="Add member"
        Click="ShowAddModal"/>

    <RadzenDataGrid
        @ref="@_grid"
        TItem="WorkspaceMembershipDto"
        AllowSorting="false"
        EditMode="DataGridEditMode.Single"
        PageSize="@GlobalConstants.ListPageSize"
        RowUpdate="@OnUpdateRow"
        Data="@_state.Value.List"
        AllowPaging="false"
        IsLoading="@_state.Value.IsListLoading"
        Count="@_state.Value.TotalCount"
        ColumnWidth="200px">

        <Columns>
            <RadzenDataGridColumn TItem="WorkspaceMembershipDto" Title="User">
                <Template Context="item">
                    @item.User.Email
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="WorkspaceMembershipDto" Title="Access">

                <EditTemplate Context="item">
                    <EnumDropDown
                        TItem="MembershipAccessType"
                        Style="width:100%; display: block"
                        Name="Name"/>
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="WorkspaceMembershipDto" Title="Projects">
                <EditTemplate Context="item">
                    <EnumDropDown
                        TItem="MembershipAccessType"
                        Style="width:100%; display: block"
                        Name="Name"/>
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn
                TItem="WorkspaceMembershipDto"
                Context="app" Filterable="false"
                Sortable="false"
                TextAlign="TextAlign.Center"
                Width="120px">

                <Template Context="item">

                    <RadzenButton
                        Size="ButtonSize.Small"
                        Icon="edit"
                        ButtonStyle="ButtonStyle.Light"
                        Click="@(args => EditRow(item))"
                        @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton
                        Size="ButtonSize.Small"
                        ButtonStyle="ButtonStyle.Danger"
                        Icon="delete"
                        Click="async () => await OnDeleteItemAsync(item)"/>
                </Template>
                <EditTemplate Context="item">

                    <RadzenButton
                        Icon="check"
                        ButtonStyle="ButtonStyle.Primary"
                        Click="@(() => OnClickSaveRow(item))"/>

                    <RadzenButton
                        Icon="close"
                        ButtonStyle="ButtonStyle.Light"
                        Click="@(() => OnClickCancelEditMode(item))">
                    </RadzenButton>
                </EditTemplate>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>
