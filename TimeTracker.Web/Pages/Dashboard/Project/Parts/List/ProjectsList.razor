@inherits BaseComponent

@using TimeTracker.Api.Shared.Dto.Entity
@using TimeTracker.Business.Common.Constants

<div class="row d-flex justify-content-center w-time-form no-gutters mx-n2">

    <RadzenCard class="w-100">
        <RadzenButton
            Icon="add_circle_outline"
            Text="Add project"
            Click="@InsertRow"
            Disabled="@(_state.Value.HasItemToAdd || !AuthState.Value.IsRoleAdmin)"/>
    </RadzenCard>

    <RadzenDataGrid
        @ref="@_grid"
        TItem="ProjectDto"
        AllowSorting="false"
        EditMode="DataGridEditMode.Single"
        PageSize="@GlobalConstants.ListPageSize"
        RowUpdate="@OnUpdateRow"
        Data="@_state.Value.SortedList"
        AllowPaging="false"
        IsLoading="@_state.Value.IsListLoading"
        Count="@_state.Value.TotalCount"
        class="mt-2"
        ColumnWidth="200px">

        <Columns>
            <RadzenDataGridColumn TItem="ProjectDto" Property="Name" Title="Name">
                <EditTemplate Context="app">
                    <RadzenTextBox @bind-Value="@app.Name" Style="width:100%; display: block" Name="Name"/>
                    <RadzenLengthValidator
                        Component="Name"
                        Min="3"
                        Max="255"
                        Style="position: absolute"/>
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="ProjectDto" Title="Client">
                <Template Context="item">
                    @item.Client?.Name
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="ProjectDto" Title="Default Hourly Rate">
                <Template Context="item">
                    @item.DefaultHourlyRate?.ToString("0.00")
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn
                TItem="ProjectDto"
                Context="app" Filterable="false"
                Sortable="false"
                TextAlign="TextAlign.Center"
                Width="120px">

                <Template Context="item">

                    @if (item.Id == 0)
                    {
                        <RadzenButton
                            Icon="edit"
                            ButtonStyle="ButtonStyle.Light"
                            Click="@(args => EditNewRow(item))"
                            Disabled="@(!AuthState.Value.IsRoleAdmin)"
                            Size="ButtonSize.Small"
                            @onclick:stopPropagation="true">
                        </RadzenButton>
                    }
                    else
                    {
                        <RadzenButton
                            Icon="edit"
                            ButtonStyle="ButtonStyle.Light"
                            Size="ButtonSize.Small"
                            Click="@(args => NavigateToProduct(item))"
                            Disabled="@(!AuthState.Value.IsRoleAdmin)"
                            @onclick:stopPropagation="true">
                        </RadzenButton>
                    }
                </Template>
                <EditTemplate Context="item">

                    <RadzenButton
                        Icon="check"
                        ButtonStyle="ButtonStyle.Primary"
                        Size="ButtonSize.Small"
                        Click="@(() => OnClickSaveRow(item))"/>

                    <RadzenButton
                        Icon="close"
                        ButtonStyle="ButtonStyle.Light"
                        Size="ButtonSize.Small"
                        Click="@(() => OnClickCancelEditMode(item))">
                    </RadzenButton>
                </EditTemplate>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>
