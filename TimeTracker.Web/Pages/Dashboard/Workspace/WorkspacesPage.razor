@page "/dashboard/workspaces"

@using TimeTracker.Web.Pages.Dashboard.Shared
@using TimeTracker.Api.Shared.Dto.Entity
@using TimeTracker.Business.Common.Constants

@inherits BaseComponent
@layout Layout

<div class="row d-flex px-3 justify-content-center w-time-form">

    <RadzenCard class="w-100">
        <RadzenButton
            Icon="add_circle_outline"
            Text="Add workspace"
            Click="@InsertRow"
            Disabled="@(_state.Value.HasItemToAdd)"/>
    </RadzenCard>

    <RadzenCard class="w-100 mt-2">
        <RadzenDataGrid
            @ref="@_grid"
            TItem="WorkspaceDto"
            AllowSorting="false"
            EditMode="DataGridEditMode.Single"
            PageSize="@GlobalConstants.ListPageSize"
            RowUpdate="@OnUpdateRow"
            Data="@_state.Value.SortedList"
            AllowPaging="false"
            IsLoading="@_state.Value.IsListLoading"
            Count="@_state.Value.TotalCount"
            ColumnWidth="200px">

            <Columns>
                <RadzenDataGridColumn TItem="WorkspaceDto" Property="Name" Title="Name">
                    <EditTemplate Context="app">
                        <RadzenTextBox @bind-Value="@app.Name" Style="width:100%; display: block" Name="Name"/>
                        <RadzenLengthValidator
                            Component="Name"
                            Min="3"
                            Max="255"
                            Style="position: absolute"/>
                    </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn
                    TItem="WorkspaceDto"
                    Context="app" Filterable="false"
                    Sortable="false"
                    TextAlign="TextAlign.Center"
                    Width="120px">

                    <Template Context="item">

                        <RadzenButton
                            Icon="edit"
                            ButtonStyle="ButtonStyle.Light"
                            Click="@(args => EditRow(item))"
                            @onclick:stopPropagation="true">
                        </RadzenButton>
                    </Template>
                    <EditTemplate Context="item">

                        <RadzenButton
                            Icon="check"
                            ButtonStyle="ButtonStyle.Primary"
                            Click="@(() => OnClickSaveRow(item))"/>

                        <RadzenButton
                            Icon="close"
                            ButtonStyle="ButtonStyle.Light"
                            Click="@(() => OnClickCancelEditMode(item))">
                        </RadzenButton>
                    </EditTemplate>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </RadzenCard>
</div>
